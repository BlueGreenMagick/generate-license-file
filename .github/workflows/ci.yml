name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node: [14, 16, 18]

    runs-on: ${{ matrix.os }}

    name: CI on ${{ matrix.os }} using Node ${{ matrix.node }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.JS
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          registry-url: https://registry.npmjs.org/

      - name: Install latest npm
        if: matrix.node == 14
        run: npm i -g npm@latest

      - name: Install dependencies
        run: npm ci

      - name: Run Prettier
        run: npx prettier --check .
        working-directory: ./projects/packages/generate-license-file

      - name: Run ESLint
        run: npx eslint . --max-warnings 0
        working-directory: ./projects/packages/generate-license-file

      - name: Build
        run: npx lerna run build --scope generate-license-file

      - name: Run Tests
        run: npx lerna run test:ci --scope generate-license-file

      - name: Codecov
        uses: codecov/codecov-action@v3.1.0
        if: matrix.os == 'ubuntu-latest' && matrix.node == '18'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./projects/packages/generate-license-file/coverage

  website-ci:
    runs-on: ubuntu-latest

    name: Website CI

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.JS
        uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org/

      - name: Install dependencies
        run: npm ci

      - name: Build docs site
        run: npm run build
        working-directory: ./projects/website

      - name: Check for git changes
        run: git diff --exit-code
